{"ast":null,"code":"var _jsxFileName = \"/Users/Magnus/Documents/fs22/part1/unicafe/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react'; // Header\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Title = _ref => {\n  let {\n    title\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: title\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 7\n  }, this);\n}; // Button\n\n\n_c = Title;\n\nconst Button = _ref2 => {\n  let {\n    text,\n    onClick\n  } = _ref2;\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: onClick,\n    children: text\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 3\n  }, this);\n};\n\n_c2 = Button;\n\nconst Statistics = _ref3 => {\n  let {\n    good,\n    bad,\n    neutral\n  } = _ref3;\n  var all = good + neutral + bad;\n\n  if (all === 0) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No feedback given\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(StatisticLine, {\n      text: \"neutral\",\n      value: neutral\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(StatisticLine, {\n      text: \"bad\",\n      value: bad\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(StatisticLine, {\n      text: \"all\",\n      value: all\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(StatisticLine, {\n      text: \"average\",\n      value: (good - bad) / all\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(StatisticLinePercent, {\n      text: \"positive\",\n      value: good * 100 / all\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}; // Average\n\n\n_c3 = Statistics;\n\nconst StatisticLine = _ref4 => {\n  let {\n    text,\n    value\n  } = _ref4;\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [text, \" \", value]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}; // Percent\n\n\n_c4 = StatisticLine;\n\nconst StatisticLinePercent = _ref5 => {\n  let {\n    text,\n    value\n  } = _ref5;\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [text, \" \", value, \" %\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}; // App\n\n\n_c5 = StatisticLinePercent;\n\nconst App = () => {\n  _s();\n\n  const mainTitle = 'give feedback';\n  const title = 'statistics'; // save clicks of each button to its own state\n\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Title, {\n      title: mainTitle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      text: \"good\",\n      onClick: () => setGood(good + 1)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      text: \"neutral\",\n      onClick: () => setNeutral(neutral + 1)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      text: \"bad\",\n      onClick: () => setBad(bad + 1)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Title, {\n      title: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Statistics, {\n      good: good,\n      neutral: neutral,\n      bad: bad\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"eScCFcZxMV7EVTyq8/QmtvFilbs=\");\n\n_c6 = App;\nexport default App;\n\nvar _c, _c2, _c3, _c4, _c5, _c6;\n\n$RefreshReg$(_c, \"Title\");\n$RefreshReg$(_c2, \"Button\");\n$RefreshReg$(_c3, \"Statistics\");\n$RefreshReg$(_c4, \"StatisticLine\");\n$RefreshReg$(_c5, \"StatisticLinePercent\");\n$RefreshReg$(_c6, \"App\");","map":{"version":3,"sources":["/Users/Magnus/Documents/fs22/part1/unicafe/src/App.js"],"names":["React","useState","Title","title","Button","text","onClick","Statistics","good","bad","neutral","all","StatisticLine","value","StatisticLinePercent","App","mainTitle","setGood","setNeutral","setBad"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\n\n// Header\nconst Title = ({title}) => {\n  return (\n      <h1>{title}</h1>\n  )\n}\n\n// Button\nconst Button = ({ text, onClick }) => (\n  <button onClick={onClick}>\n    {text}\n  </button>\n)\n\nconst Statistics = ({good, bad, neutral}) => {\n  var all = good + neutral + bad\n\n  if (all === 0) {\n    return (\n      <p>No feedback given</p>\n    )\n  }\n\n  return(\n  <>\n    <StatisticLine text='neutral' value={neutral} />\n    <StatisticLine text='bad' value={bad} />\n    <StatisticLine text='all' value={all} />\n    <StatisticLine text='average' value={((good - bad) / all)} />\n    <StatisticLinePercent text='positive' value={((good * 100) / all)} />\n  </>\n  )\n}\n\n// Average\nconst StatisticLine = ({text, value}) => {\n  return (\n    <p>{text} {value}</p>\n  )\n}\n\n// Percent\nconst StatisticLinePercent = ({text, value}) => {\n  return (\n    <p>{text} {value} %</p>\n  )\n}\n\n// App\nconst App = () => {\n  const mainTitle = 'give feedback'\n  const title = 'statistics'\n\n  // save clicks of each button to its own state\n  const [good, setGood] = useState(0)\n  const [neutral, setNeutral] = useState(0)\n  const [bad, setBad] = useState(0)\n\n  return (\n    <div>\n      <Title title={mainTitle} />\n      <Button text='good' onClick={() => setGood(good + 1)} />\n      <Button text='neutral' onClick={() => setNeutral(neutral + 1)} />\n      <Button text='bad' onClick={() => setBad(bad+1)} />\n\n      <Title title={title} />\n      <Statistics good={good} neutral={neutral} bad={bad} />\n    </div>\n    \n  )\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}