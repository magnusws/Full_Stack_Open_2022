{"ast":null,"code":"var _jsxFileName = \"/Users/Magnus/Documents/fs22/part1/unicafe/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { findAllByText } from '@testing-library/react';\nimport React, { useState } from 'react'; // Header\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Title = _ref => {\n  let {\n    title\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: title\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 7\n  }, this);\n}; // Button\n\n\n_c = Title;\n\nconst Button = _ref2 => {\n  let {\n    text,\n    onClick\n  } = _ref2;\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: onClick,\n    children: text\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 3\n  }, this);\n}; // Total\n\n\n_c2 = Button;\n\nconst Sum = _ref3 => {\n  let {\n    text,\n    num\n  } = _ref3;\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [text, \" \", num]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 7\n  }, this);\n}; // App\n\n\n_c3 = Sum;\n\nconst App = () => {\n  _s();\n\n  const mainTitle = 'give feedback';\n  const title = 'statistics'; // save clicks of each button to its own state\n\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n  const [all, setAll] = useState(0);\n  const [average, setAverage] = useState(0);\n  const [percentPositive, setPositive] = useState(100);\n\n  const onClickGood = () => {\n    setGood(good + 1);\n    updateStatistics();\n  };\n\n  const onClickNeutral = () => {\n    setNeutral(neutral + 1);\n    updateStatistics();\n  };\n\n  const onClickBad = () => {\n    setBad(bad + 1);\n    updateStatistics();\n  };\n\n  const updateStatistics = () => {\n    setAll(good + neutral + bad);\n    setAverage((good - bad) / (good + bad));\n    setPositive(good * 100 / all);\n    console.log('average: ', average);\n    console.log('positive', percentPositive, '%');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Title, {\n      title: mainTitle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      text: \"good\",\n      onClick: onClickGood\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      text: \"neutral\",\n      onClick: onClickNeutral\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      text: \"bad\",\n      onClick: onClickBad\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Title, {\n      title: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Sum, {\n      text: \"good\",\n      num: good\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Sum, {\n      text: \"neutral\",\n      num: neutral\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Sum, {\n      text: \"bad\",\n      num: bad\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"w5cgAEaZyD/xZczvHP8K+rsWGB4=\");\n\n_c4 = App;\nexport default App;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"Title\");\n$RefreshReg$(_c2, \"Button\");\n$RefreshReg$(_c3, \"Sum\");\n$RefreshReg$(_c4, \"App\");","map":{"version":3,"sources":["/Users/Magnus/Documents/fs22/part1/unicafe/src/App.js"],"names":["findAllByText","React","useState","Title","title","Button","text","onClick","Sum","num","App","mainTitle","good","setGood","neutral","setNeutral","bad","setBad","all","setAll","average","setAverage","percentPositive","setPositive","onClickGood","updateStatistics","onClickNeutral","onClickBad","console","log"],"mappings":"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","sourcesContent":["\nimport { findAllByText } from '@testing-library/react'\nimport React, { useState } from 'react'\n\n// Header\nconst Title = ({title}) => {\n  return (\n      <h1>{title}</h1>\n  )\n}\n\n// Button\nconst Button = ({ text, onClick }) => (\n  <button onClick={onClick}>\n    {text}\n  </button>\n)\n\n// Total\nconst Sum = ({text, num}) => {\n  return(\n      <p>{text} {num}</p>\n  )\n}\n\n// App\nconst App = () => {\n  const mainTitle = 'give feedback'\n  const title = 'statistics'\n\n  // save clicks of each button to its own state\n  const [good, setGood] = useState(0)\n  const [neutral, setNeutral] = useState(0)\n  const [bad, setBad] = useState(0)\n  const [all, setAll] = useState(0)\n  const [average, setAverage] = useState(0)\n  const [percentPositive, setPositive] = useState(100)\n\n  const onClickGood = () => {\n    setGood(good + 1)\n    updateStatistics()\n  }\n\n  const onClickNeutral = () => {\n    setNeutral(neutral + 1)\n    updateStatistics()\n  }\n\n  const onClickBad = () => {\n    setBad(bad + 1)\n    updateStatistics()\n  }\n\n  const updateStatistics = () => {\n   setAll(good + neutral + bad)\n   setAverage((good - bad) / (good + bad))\n   setPositive((good * 100) / all)\n\n   console.log('average: ', average)\n    console.log('positive', percentPositive, '%')\n  }\n\n  return (\n    <div>\n      <Title title={mainTitle} />\n      <Button text='good' onClick={onClickGood} />\n      <Button text='neutral' onClick={onClickNeutral} />\n      <Button text='bad' onClick={onClickBad} />\n\n      <Title title={title} />\n      <Sum text='good' num={good}/>\n      <Sum text='neutral' num={neutral} />\n      <Sum text='bad' num={bad} />\n    </div>\n  )\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}