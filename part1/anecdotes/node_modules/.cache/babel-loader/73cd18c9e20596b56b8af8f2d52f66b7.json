{"ast":null,"code":"var _jsxFileName = \"/Users/Magnus/Documents/fs22/part1/unicafe/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react'; // Header\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Title = _ref => {\n  let {\n    title\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: title\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 7\n  }, this);\n}; // Button\n\n\n_c = Title;\n\nconst Button = _ref2 => {\n  let {\n    text,\n    onClick\n  } = _ref2;\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: onClick,\n    children: text\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 3\n  }, this);\n};\n\n_c2 = Button;\n\nconst Statistics = _ref3 => {\n  let {\n    good,\n    bad,\n    neutral\n  } = _ref3;\n  var all = good + neutral + bad;\n\n  if (all === 0) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [text, \": no feedback\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Sum, {\n      text: \"neutral\",\n      num: neutral\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Sum, {\n      text: \"bad\",\n      num: bad\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Sum, {\n      text: \"all\",\n      num: all\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Average, {\n      text: \"average\",\n      good: good,\n      bad: bad,\n      all: all\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Percent, {\n      text: \"positive\",\n      good: good,\n      all: all\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}; // Sum\n\n\n_c3 = Statistics;\n\nconst Sum = _ref4 => {\n  let {\n    text,\n    num\n  } = _ref4;\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [text, \" \", num]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 7\n  }, this);\n}; // Average\n\n\n_c4 = Sum;\n\nconst Average = _ref5 => {\n  let {\n    text,\n    good,\n    bad,\n    all\n  } = _ref5;\n\n  if (all === 0) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [text, \": no feedback\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [text, \" \", (good - bad) / all]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}; // Percent\n\n\n_c5 = Average;\n\nconst Percent = _ref6 => {\n  let {\n    text,\n    good,\n    all\n  } = _ref6;\n\n  if (all === 0) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [text, \": no feedback\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [text, \" \", good * 100 / all, \" %\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n}; // App\n\n\n_c6 = Percent;\n\nconst App = () => {\n  _s();\n\n  const mainTitle = 'give feedback';\n  const title = 'statistics'; // save clicks of each button to its own state\n\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Title, {\n      title: mainTitle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      text: \"good\",\n      onClick: () => setGood(good + 1)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      text: \"neutral\",\n      onClick: () => setNeutral(neutral + 1)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      text: \"bad\",\n      onClick: () => setBad(bad + 1)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Title, {\n      title: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Statistics, {\n      good: good,\n      neutral: neutral,\n      bad: bad\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"eScCFcZxMV7EVTyq8/QmtvFilbs=\");\n\n_c7 = App;\nexport default App;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7;\n\n$RefreshReg$(_c, \"Title\");\n$RefreshReg$(_c2, \"Button\");\n$RefreshReg$(_c3, \"Statistics\");\n$RefreshReg$(_c4, \"Sum\");\n$RefreshReg$(_c5, \"Average\");\n$RefreshReg$(_c6, \"Percent\");\n$RefreshReg$(_c7, \"App\");","map":{"version":3,"sources":["/Users/Magnus/Documents/fs22/part1/unicafe/src/App.js"],"names":["React","useState","Title","title","Button","text","onClick","Statistics","good","bad","neutral","all","Sum","num","Average","Percent","App","mainTitle","setGood","setNeutral","setBad"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC,C,CAEA;;;;;AACA,MAAMC,KAAK,GAAG,QAAa;AAAA,MAAZ;AAACC,IAAAA;AAAD,GAAY;AACzB,sBACI;AAAA,cAAKA;AAAL;AAAA;AAAA;AAAA;AAAA,UADJ;AAGD,CAJD,C,CAMA;;;KANMD,K;;AAON,MAAME,MAAM,GAAG;AAAA,MAAC;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,GAAD;AAAA,sBACb;AAAQ,IAAA,OAAO,EAAEA,OAAjB;AAAA,cACGD;AADH;AAAA;AAAA;AAAA;AAAA,UADa;AAAA,CAAf;;MAAMD,M;;AAMN,MAAMG,UAAU,GAAG,SAA0B;AAAA,MAAzB;AAACC,IAAAA,IAAD;AAAOC,IAAAA,GAAP;AAAYC,IAAAA;AAAZ,GAAyB;AAC3C,MAAIC,GAAG,GAAGH,IAAI,GAAGE,OAAP,GAAiBD,GAA3B;;AAEA,MAAIE,GAAG,KAAK,CAAZ,EAAe;AACb,wBACE;AAAA,iBAAIN,IAAJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAGD;;AAED,sBACA;AAAA,4BACE,QAAC,GAAD;AAAK,MAAA,IAAI,EAAC,SAAV;AAAoB,MAAA,GAAG,EAAEK;AAAzB;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,GAAD;AAAK,MAAA,IAAI,EAAC,KAAV;AAAgB,MAAA,GAAG,EAAED;AAArB;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,GAAD;AAAK,MAAA,IAAI,EAAC,KAAV;AAAgB,MAAA,GAAG,EAAEE;AAArB;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE,QAAC,OAAD;AAAS,MAAA,IAAI,EAAC,SAAd;AAAwB,MAAA,IAAI,EAAEH,IAA9B;AAAoC,MAAA,GAAG,EAAEC,GAAzC;AAA8C,MAAA,GAAG,EAAEE;AAAnD;AAAA;AAAA;AAAA;AAAA,YAJF,eAKE,QAAC,OAAD;AAAS,MAAA,IAAI,EAAC,UAAd;AAAyB,MAAA,IAAI,EAAEH,IAA/B;AAAqC,MAAA,GAAG,EAAEG;AAA1C;AAAA;AAAA;AAAA;AAAA,YALF;AAAA,kBADA;AASD,CAlBD,C,CAoBA;;;MApBMJ,U;;AAqBN,MAAMK,GAAG,GAAG,SAAiB;AAAA,MAAhB;AAACP,IAAAA,IAAD;AAAOQ,IAAAA;AAAP,GAAgB;AAC3B,sBACI;AAAA,eAAIR,IAAJ,OAAWQ,GAAX;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAGD,CAJD,C,CAMA;;;MANMD,G;;AAON,MAAME,OAAO,GAAG,SAA4B;AAAA,MAA3B;AAACT,IAAAA,IAAD;AAAOG,IAAAA,IAAP;AAAaC,IAAAA,GAAb;AAAkBE,IAAAA;AAAlB,GAA2B;;AAC1C,MAAIA,GAAG,KAAK,CAAZ,EAAe;AACb,wBACE;AAAA,iBAAIN,IAAJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAGD;;AACD,sBACE;AAAA,eAAIA,IAAJ,OAAW,CAACG,IAAI,GAAGC,GAAR,IAAeE,GAA1B;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAGD,CATD,C,CAWA;;;MAXMG,O;;AAYN,MAAMC,OAAO,GAAG,SAAuB;AAAA,MAAtB;AAACV,IAAAA,IAAD;AAAOG,IAAAA,IAAP;AAAaG,IAAAA;AAAb,GAAsB;;AACrC,MAAGA,GAAG,KAAK,CAAX,EAAa;AACX,wBACE;AAAA,iBAAIN,IAAJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAGD;;AACD,sBACE;AAAA,eAAIA,IAAJ,OAAaG,IAAI,GAAG,GAAR,GAAeG,GAA3B;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAGD,CATD,C,CAWA;;;MAXMI,O;;AAYN,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAChB,QAAMC,SAAS,GAAG,eAAlB;AACA,QAAMd,KAAK,GAAG,YAAd,CAFgB,CAIhB;;AACA,QAAM,CAACK,IAAD,EAAOU,OAAP,IAAkBjB,QAAQ,CAAC,CAAD,CAAhC;AACA,QAAM,CAACS,OAAD,EAAUS,UAAV,IAAwBlB,QAAQ,CAAC,CAAD,CAAtC;AACA,QAAM,CAACQ,GAAD,EAAMW,MAAN,IAAgBnB,QAAQ,CAAC,CAAD,CAA9B;AAEA,sBACE;AAAA,4BACE,QAAC,KAAD;AAAO,MAAA,KAAK,EAAEgB;AAAd;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,MAAb;AAAoB,MAAA,OAAO,EAAE,MAAMC,OAAO,CAACV,IAAI,GAAG,CAAR;AAA1C;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,SAAb;AAAuB,MAAA,OAAO,EAAE,MAAMW,UAAU,CAACT,OAAO,GAAG,CAAX;AAAhD;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE,QAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,KAAb;AAAmB,MAAA,OAAO,EAAE,MAAMU,MAAM,CAACX,GAAG,GAAC,CAAL;AAAxC;AAAA;AAAA;AAAA;AAAA,YAJF,eAME,QAAC,KAAD;AAAO,MAAA,KAAK,EAAEN;AAAd;AAAA;AAAA;AAAA;AAAA,YANF,eAOE,QAAC,UAAD;AAAY,MAAA,IAAI,EAAEK,IAAlB;AAAwB,MAAA,OAAO,EAAEE,OAAjC;AAA0C,MAAA,GAAG,EAAED;AAA/C;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAYD,CArBD;;GAAMO,G;;MAAAA,G;AAuBN,eAAeA,GAAf","sourcesContent":["import React, { useState } from 'react'\n\n// Header\nconst Title = ({title}) => {\n  return (\n      <h1>{title}</h1>\n  )\n}\n\n// Button\nconst Button = ({ text, onClick }) => (\n  <button onClick={onClick}>\n    {text}\n  </button>\n)\n\nconst Statistics = ({good, bad, neutral}) => {\n  var all = good + neutral + bad\n\n  if (all === 0) {\n    return (\n      <p>{text}: no feedback</p>\n    )\n  }\n  \n  return(\n  <>\n    <Sum text='neutral' num={neutral} />\n    <Sum text='bad' num={bad} />\n    <Sum text='all' num={all} />\n    <Average text='average' good={good} bad={bad} all={all} />\n    <Percent text='positive' good={good} all={all} />\n  </>\n  )\n}\n\n// Sum\nconst Sum = ({text, num}) => {\n  return(\n      <p>{text} {num}</p>\n  )\n}\n\n// Average\nconst Average = ({text, good, bad, all}) => {\n  if (all === 0) {\n    return (\n      <p>{text}: no feedback</p>\n    )\n  }\n  return (\n    <p>{text} {(good - bad) / all}</p>\n  )\n}\n\n// Percent\nconst Percent = ({text, good, all}) => {\n  if(all === 0){\n    return (\n      <p>{text}: no feedback</p>\n    )\n  }\n  return (\n    <p>{text} {((good * 100) / all)} %</p>\n  )\n}\n\n// App\nconst App = () => {\n  const mainTitle = 'give feedback'\n  const title = 'statistics'\n\n  // save clicks of each button to its own state\n  const [good, setGood] = useState(0)\n  const [neutral, setNeutral] = useState(0)\n  const [bad, setBad] = useState(0)\n\n  return (\n    <div>\n      <Title title={mainTitle} />\n      <Button text='good' onClick={() => setGood(good + 1)} />\n      <Button text='neutral' onClick={() => setNeutral(neutral + 1)} />\n      <Button text='bad' onClick={() => setBad(bad+1)} />\n\n      <Title title={title} />\n      <Statistics good={good} neutral={neutral} bad={bad} />\n    </div>\n    \n  )\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}